name: Build Cursor Debian Package

on:
  schedule:
    # Run every days at midnight
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Check if latest Cursor version already exists
      id: check_version
      run: |
        # Get latest Cursor version from their official API
        CURSOR_VERSION=$(curl -s https://cursor.com/api/download?platform=linux-x64&releaseTrack=stable | jq -r .version)
        echo "CURSOR_VERSION=$CURSOR_VERSION" >> $GITHUB_ENV
        
        # Check if this version already exists as a release in our repo
        EXISTING_RELEASE=$(curl -s "https://api.github.com/repos/${{ github.repository }}/releases/tags/v$CURSOR_VERSION" | jq -r '.tag_name')
        
        if [ "$EXISTING_RELEASE" = "v$CURSOR_VERSION" ]; then
          echo "Release v$CURSOR_VERSION already exists, skipping build and release steps"
          echo "skip_build=true" >> $GITHUB_OUTPUT
        else
          echo "Release v$CURSOR_VERSION does not exist, proceeding with build"
          echo "skip_build=false" >> $GITHUB_OUTPUT
        fi

    - name: Build latest Cursor .deb package
      if: steps.check_version.outputs.skip_build == 'false'
      run: |
        ./auto-convert.sh

    - name: Create Release
      if: steps.check_version.outputs.skip_build == 'false'
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ env.CURSOR_VERSION }}
        name: Cursor IDE v${{ env.CURSOR_VERSION }}
        body: |
          Cursor IDE v${{ env.CURSOR_VERSION }} packaged as a Debian (.deb) package
          
          ### Installation
          ```
          sudo apt install ./cursor-ide_${{ env.CURSOR_VERSION }}_amd64.deb
          ```
        files: cursor-ide_${{ env.CURSOR_VERSION }}_amd64.deb
        draft: false
        prerelease: false